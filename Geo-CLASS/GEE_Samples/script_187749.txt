/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var table = ee.FeatureCollection("users/kidsherry/Beijing");
/***** End of imports. If edited, may not auto-convert in the playground. *****/


//1. 合成20年的年最大NDVI



var year_list=ee.List.sequence(2000,2019);

year_list=year_list.map(function(num){

  var time=ee.Date.fromYMD(num, 1, 1);

  var year_image=ee.ImageCollection('MODIS/006/MOD13A1')

                  .filterDate(time,ee.Date(time).advance(1,'year'))//当前年份到下一年

                  .max();//取最大值

  var year_ndvi=year_image.select('NDVI');

  year_ndvi=year_ndvi.set({'system:time_start':ee.Date.fromYMD(num,1,1)});

  return  year_ndvi.addBands(ee.Image.constant(num).toFloat());                 

});



var img_collection=ee.ImageCollection.fromImages(year_list);





//2. 对影像进行趋势分析

var linearFit = img_collection.select(['constant', 'NDVI'])

  .reduce(ee.Reducer.linearFit());



//3. 显示结果

var trendVis = {

  min: -100,

  max: 100,

  palette: [

    '040274', '040281', '0502a3', '0502b8', '0502ce', '0502e6',

    '0602ff', '235cb1', '307ef3', '269db1', '30c8e2', '32d3ef',

    '3be285', '3ff38f', '86e26f', '3ae237', 'b5e22e', 'd6e21f',

    'fff705', 'ffd611', 'ffb613', 'ff8b13', 'ff6e08', 'ff500d',

    'ff0000', 'de0101', 'c21301', 'a71001', '911003'

  ],

};

Map.centerObject(table,9);

print(linearFit);

Map.addLayer(linearFit.select('scale').clip(table),trendVis);



//4. 选取区域

var northwest =

    ee.Geometry.Polygon(

        [[[116.1134535754385, 40.18621292916931],

          [116.1134535754385, 40.127436350381466],

          [116.17662496215725, 40.127436350381466],

          [116.17662496215725, 40.18621292916931]]], null, false),

    center =

    ee.Geometry.Polygon(

        [[[116.3441664660635, 39.89814325577099],

          [116.3441664660635, 39.851770517596385],

          [116.40184468871975, 39.851770517596385],

          [116.40184468871975, 39.89814325577099]]], null, false),

    southeast =

    ee.Geometry.Polygon(

        [[[116.525440880126, 39.77582023827742],

          [116.525440880126, 39.71880246541583],

          [116.5858656848135, 39.71880246541583],

          [116.5858656848135, 39.77582023827742]]], null, false);



var roi_collection=ee.FeatureCollection([ee.Feature(northwest,{'label':'northwest'}),

                                     ee.Feature(center,{'label':'center'}),

                                      ee.Feature(southeast,{'label':'southeast'})]);

Map.addLayer(roi_collection);



//5. 画图

var ndviTimeSeries = ui.Chart.image.seriesByRegion(

  img_collection, roi_collection, ee.Reducer.mean(), 'NDVI',500,'system:time_start','label')

          .setOptions({

          vAxis: {title: 'NDVI*10000'},

          lineWidth: 1,

          pointSize: 4,

          series: {

            0: {color: 'FF0000'},

            1: {color: '00FF00'},

            2: {color: '0000FF'}

}});

//6. 输出图表 

print(ndviTimeSeries)
